---
#
# Setting firewalld
#
- name: Check if exist firewalld
  shell: rpm -qa | grep firewalld
  register: firewalld_exist
  changed_when: False
  ignore_errors: True

- name: Start firewalld
  service: name=firewalld state=started enabled=yes
  when: firewalld_exist.stdout != ""
  sudo: yes
  notify: Wait for the server to come up

- name: Check if firewalld is running
  command: systemctl is-active firewalld
  register: firewalld_result
  changed_when: False
  ignore_errors: True
  sudo: yes

- name: Set the port state
  firewalld: permanent=True port={{ item }} state=enabled
  with_items: firewalld_allowed_ports
  when:
   - firewalld_exist.stdout != ""
   - firewalld_result.stdout == "active"
  sudo: yes
  notify: Reload firewalld

#
# If firewalld is not exist, setting iptables
#
- name: Ensure iptables is installed (RedHat).
  yum: pkg=iptables state=installed
  when:
   - ansible_os_family == 'RedHat'
   - firewalld_exist.stdout == ""
  sudo: yes

#- name: Ensure iptables is installed (Debian).
  #apt: pkg=iptables state=installed
  #when:
   #- ansible_os_family == 'Debian'
   #- firewalld_exist.stdout == ""
  #sudo: yes

- name: Flush iptables the first time playbook runs.
  command: iptables -F creates=/etc/init.d/firewall
  when: firewalld_exist.stdout == ""
  sudo: yes

- name: Copy firewall script into place.
  template: src=firewall.bash.j2 dest=/etc/firewall.bash owner=root group=root mode=0744
  when: firewalld_exist.stdout == ""
  sudo: yes
  notify: restart firewall

- name: Copy firewall init script into place.
  template: src=firewall.j2 dest=/etc/init.d/firewall owner=root group=root mode=0755
  when: firewalld_exist.stdout == ""
  sudo: yes

- name: Ensure the firewall is enabled and will start on boot.
  service: name=firewall state=started enabled=yes
  when: firewalld_exist.stdout == ""
  sudo: yes
